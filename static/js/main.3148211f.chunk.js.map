{"version":3,"sources":["backendapi.js","CheckStat.js","NavBar.js","RecentImages.js","NewImage.js","Home.js","ImageResult.js","ViewImage.js","serviceWorker.js","DevTools.js","ModelProfile.js","Footer.js","About.js","Error404.js","index.js"],"names":["Axios","create","baseURL","CheckStat","state","backendStatus","tensorflowStatus","backendError","backendapi","get","then","res","console","log","data","message","setState","catch","err","this","LinearProgress","Typography","color","align","variant","onClick","window","location","reload","React","Component","NavBar","AppBar","position","style","backgroundColor","zIndex","Toolbar","display","alignItems","justifySelf","flexGrow","to","textDecoration","pathname","deleteSuccess","Tooltip","title","IconButton","component","float","marginLeft","RecentImages","image_array","image_url","selected_img","selected_img_filename","openView","showConfirm","succ","pageloadErr","pageloaded","uploads","config","delete","refreshImagelist","ViewImage","Dialog","open","onClose","DialogTitle","size","DialogContent","src","alt","width","DialogActions","filename","Button","Deletedialog","DialogContentText","confirmDelete","autoFocus","images","map","img","up","cascade","maxWidth","margin","Deletesnack","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","PageLoader","CircularProgress","Alert","severity","Row","maxHeight","overflow","alignContent","justifyContent","Card","raised","CardContent","NewImage","file","fileObj","formSuccess","event","URL","createObjectURL","target","files","preventDefault","formData","FormData","append","method","url","headers","Col","imageResolution","Form","onSubmit","uploadFile","id","className","type","accept","name","required","onChange","onFileUpload","htmlFor","sm","Home","ImageResult","fileURL","cat","blight_level","blast_level","brownspot_level","selected_model","modelError","checkLevel","value","props","localStorage","getItem","post","model","category","Percentage","bacterial_blight","leaf_blast","brownspot","PredictData","from","tension","precision","toFixed","ProgressBar","now","Spinner","animation","RemedyView","imgurl","imgfname","duration","delay","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","DevTools","model_list","selected_model_name","selected_model_fullname","selected_model_obj","selected_modelprops","selected_model_rank","darkMode","modelname","modelfname","modelfullname","models","setItem","model_name","model_filename","model_fullname","setTimeout","onModelChange","model_props","rank","conv","nodes","dense","ModelQuality","SelectModelList","List","ListItem","button","selected","ListItemText","mdl","MenuItem","key","FormControl","Select","FormHelperText","FormControlLabel","label","labelPlacement","control","Switch","checked","ModelProfile","model_obj","model_profile","model_table","epochAccsvg","epochLosssvg","model_summary","layer","TableRow","TableCell","layer_type","Chip","layer_cat","output_shape","param_num","noGutters","acc","loss","highest_validation_acc","lowest_validation_loss","model_desc_name","TableContainer","Paper","Table","stickyHeader","TableHead","TableBody","total_params","trainable_params","non_trainable_params","Footer","About","ListItemAvatar","Avatar","height","marginRight","primary","secondary","Fragment","Error404","Link","darkmode","createMuiTheme","palette","background","default","paper","lightmode","theme","setTheme","App","basename","ThemeProvider","CssBaseline","marginTop","Container","TransitionGroup","path","conmponent","exact","Divider","ReactDOM","render","document","getElementById","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3148211f.chunk.js","sourcesContent":["import Axios from 'axios'\r\nconst host = {\r\n    heroku: \"//pldds-beta.herokuapp.com\",\r\n    localhost: \"//192.168.43.59:5000\"\r\n}\r\nexport default Axios.create({\r\n    baseURL:host.heroku\r\n})","import React from \"react\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\nimport backendapi from \"./backendapi\";\r\n\r\nclass CheckStat extends React.Component {\r\n  state = {\r\n    backendStatus: false,\r\n    tensorflowStatus: false,\r\n    backendError: false,\r\n  };\r\n  componentDidMount() {\r\n    backendapi.get(\"/\")\r\n      .then((res) => {\r\n      console.log(res.data.message);\r\n      this.setState({\r\n        backendStatus: true,\r\n      });\r\n      })\r\n      .catch(err => this.setState({ backendError: true }))\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.backendStatus === true) return <div></div>;\r\n    if (this.state.backendStatus === false && this.state.backendError === false)\r\n      return (\r\n        <div>\r\n          <LinearProgress />\r\n        </div>\r\n      );\r\n    if (this.state.backendError === true )\r\n      return (\r\n        <div>\r\n          <Typography color=\"error\" align=\"center\" variant=\"caption\">\r\n            Unable to connect to server. <a onClick={()=>window.location.reload()}>♻</a>\r\n          </Typography>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default CheckStat;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppBar, Toolbar, Typography, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CheckStat from \"./CheckStat\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        style={{ backgroundColor: \"black\", zIndex: \"1\" }}\r\n      >\r\n        <Toolbar style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Typography\r\n            style={{ justifySelf: \"center\", flexGrow: 1 }}\r\n            variant=\"h7\"\r\n          >\r\n            <Link to=\"/\" style={{ color: \"white\", textDecoration: \"none\" }}>\r\n              <EcoIcon />\r\n              PLDDS{\" \"}\r\n              <sup>\r\n                <small>v1.0</small>\r\n              </sup>\r\n            </Link>\r\n          </Typography>\r\n          <Link\r\n            to={{\r\n              pathname: \"/newimage\",\r\n              state: {\r\n                deleteSuccess: false,\r\n              },\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <Tooltip title=\"Test image\">\r\n            <IconButton\r\n              component=\"span\"\r\n              style={{\r\n                color: \"white\",\r\n                float: \"right\",\r\n                backgroundColor: \"#242424\",\r\n              }}\r\n              >\r\n              <CameraAltIcon />\r\n            </IconButton>\r\n              </Tooltip>\r\n          </Link>\r\n          <Link to=\"/devtools\" style={{ textDecoration: \"none\" }}>\r\n            <Tooltip title=\"Developer tools\">\r\n            <IconButton\r\n              component=\"span\"\r\n              style={{ backgroundColor: \"#242424\", marginLeft: \"5px\" }}\r\n              >\r\n              <SettingsIcon\r\n                style={{ color: \"white\" }}\r\n                />\r\n            </IconButton>\r\n                </Tooltip>\r\n          </Link>\r\n          <Link to=\"/about\" style={{ textDecoration: \"none\" }}>\r\n            <Tooltip title=\"About us\">\r\n            <IconButton\r\n              component=\"span\"\r\n              style={{ backgroundColor: \"#242424\", marginLeft: \"5px\" }}\r\n              >\r\n              <InfoIcon\r\n                onClick={() => console.log(\"clicked on info\")}\r\n                style={{ color: \"white\" }}\r\n                />\r\n            </IconButton>\r\n                </Tooltip>\r\n          </Link>\r\n        </Toolbar>\r\n        <CheckStat />\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Row} from \"react-bootstrap\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport backendapi from \"./backendapi\";\r\nimport { Link} from \"react-router-dom\";\r\nimport { Card, CardContent, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Button, DialogContentText, Snackbar, IconButton, LinearProgress, CircularProgress } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass RecentImages extends React.Component {\r\n  state = {\r\n    image_array: [],\r\n    image_url: null,\r\n    selected_img:null,\r\n    selected_img_filename: null,\r\n    openView: false,\r\n    showConfirm: false,\r\n    succ: false,\r\n    pageloadErr: false,\r\n    pageloaded:false,\r\n  };\r\n  componentDidMount() {\r\n    backendapi.get(\"/uploadedfiles\")\r\n      .then(res => {\r\n      this.setState({\r\n        image_array: res.data.uploads,\r\n        image_url: res.config.baseURL + \"/getimg/\",\r\n      });\r\n    })\r\n    backendapi.get('/')\r\n      .then(res => this.setState({ pageloaded: true }))\r\n    .catch(err=> this.setState({ pageloadErr: true }))\r\n\r\n  }\r\n\r\n  confirmDelete() {\r\n    console.log(\"delete action!\");\r\n    backendapi\r\n      .delete(\"/deletefile/\" + this.state.selected_img)\r\n      .then(res => {\r\n        console.log(res.data.message);\r\n        this.setState({ showConfirm: false, succ: true, openView:false });\r\n        this.refreshImagelist()\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  refreshImagelist() {\r\n    backendapi.get(\"/uploadedfiles\").then(res => {\r\n      this.setState({\r\n        image_array: res.data.uploads,\r\n        image_url: res.config.baseURL + \"/getimg/\",\r\n        \r\n      });\r\n    })\r\n  }\r\n\r\n  render() {\r\n      \r\n    const ViewImage = () => {\r\n      return (\r\n        <Dialog\r\n          open={this.state.openView}\r\n          onClose={()=>this.setState({openView:false})}\r\n        >\r\n          <DialogTitle>View Image\r\n          <IconButton style={{float:'right'}} size='small' onClick={()=>this.setState({openView:false})}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <img\r\n              src={this.state.image_url + this.state.selected_img}\r\n              alt={this.state.selected_img}\r\n              style={{\r\n                width:'100%',\r\n              }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Link\r\n              to={{\r\n                pathname: \"/result\",\r\n                state: { filename: this.state.selected_img }\r\n              }}\r\n              >\r\n            \r\n            <Button>Test Image</Button>\r\n            </Link>\r\n            <Button onClick={() => this.setState({ showConfirm: true })}>Delete Image</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )\r\n    }\r\n\r\n    const Deletedialog = () => {\r\n      return (\r\n        \r\n        <Dialog\r\n        open={this.state.showConfirm}\r\n        onClose={() => this.setState({ showConfirm: false })}\r\n        >\r\n          <DialogTitle>Confirm Delete</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Do you want to delete this image? <br />\r\n              This image cannot be restored if you perform this action.\r\n            </DialogContentText>\r\n            <DialogActions>\r\n              <Button onClick={()=>this.setState({ showConfirm: false })}>No</Button>\r\n              <Button color='secondary' onClick={()=>this.confirmDelete()} autoFocus>Yes</Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n      </Dialog>\r\n        )\r\n}\r\n\r\n    const images = this.state.image_array.map(img => {\r\n      return (\r\n          <Fade up cascade>\r\n                          <img\r\n              variant=\"top\"\r\n              src={this.state.image_url + img}\r\n            style=\r\n            {{\r\n              display:\"flex\",\r\n              maxWidth: '100px',\r\n              margin: \"4px\",\r\n            }}\r\n              alt={img}\r\n              onClick={() => {\r\n                this.setState({\r\n                  openView: true,\r\n                selected_img:img\r\n                })\r\n              }}\r\n                />\r\n          </Fade>\r\n      );\r\n    });\r\n\r\n    const Deletesnack = () => {\r\n      \r\n      return <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n        }}\r\n        open={this.state.succ}\r\n        autoHideDuration={3000}\r\n        onClose={() => { this.setState({ succ: false }) }}\r\n        message=\"Image Deleted Successfully.\"\r\n    />\r\n    }\r\n    const PageLoader = () => {\r\n      if (this.state.pageloaded === false && this.state.pageloadErr === false)\r\n        return (\r\n          <div>\r\n            <br/>\r\n            <center>\r\n              <CircularProgress color=\"secondary\" />\r\n            </center>\r\n          </div>\r\n        )\r\n      if (this.state.pageloaded === false && this.state.pageloadErr === true)\r\n        return (\r\n          <div><br />\r\n            <Alert severity=\"error\">Unable to connect to Server. Check your internet connection and try again.</Alert>\r\n          </div>\r\n        )\r\n      else\r\n        return (\r\n          <div>\r\n                <Row\r\n                style={{\r\n                  display: \"flex\",\r\n                  maxHeight: \"70vh\",\r\n                  overflow: \"auto\",\r\n                  alignContent: \"flex-start\",\r\n                  justifyContent:\"center\"\r\n                }}\r\n              >\r\n                {images}\r\n                </Row>\r\n          </div>\r\n        )\r\n    }\r\n    return (\r\n      <div>\r\n        <Fade cascade>\r\n          <Card raised={true}>\r\n            <CardContent>\r\n            <Typography variant=\"h6\">Recently uploaded images</Typography>\r\n            <PageLoader/>\r\n              \r\n            </CardContent>\r\n          </Card>\r\n        </Fade>\r\n        <ViewImage />\r\n        <Deletedialog />\r\n        <Deletesnack/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecentImages;\r\n","import React from \"react\";\r\nimport { Form, Row, Col } from \"react-bootstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport backendapi from \"./backendapi\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport RecentImages from \"./RecentImages\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nclass NewImage extends React.Component {\r\n  state = {\r\n    file: null,\r\n    fileObj: null,\r\n    filename: null,\r\n    formSuccess: false,\r\n    deleteSuccess: false\r\n  };\r\n\r\n  componentWillMount() {\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  onFileUpload(event) {\r\n    this.setState({\r\n      file: URL.createObjectURL(event.target.files[0]),\r\n      fileObj: event.target.files[0]\r\n    });\r\n  }\r\n\r\n  uploadFile(event) {\r\n    event.preventDefault();\r\n    var formData = new FormData();\r\n    formData.append(\"file\", this.state.fileObj);\r\n    backendapi({\r\n      method: \"post\",\r\n      url: \"/upload\",\r\n      data: formData,\r\n      headers: {\r\n        \"Content-type\": \"multipart/form-data\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          filename: res.data.filename,\r\n          formSuccess: true\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  render() {\r\n    if (this.state.formSuccess === true) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/result\",\r\n            state: {\r\n              file: this.state.file,\r\n              fileObj: this.state.fileObj,\r\n              filename: this.state.filename,\r\n            }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <Fade cascade>\r\n          <Row>\r\n            <Col>\r\n            <Card raised={true}>\r\n                <CardContent>\r\n                  \r\n                  <Typography variant=\"h6\">\r\n                    Upload Image\r\n              </Typography>\r\n            <img\r\n              src={this.state.file}\r\n              style={{ imageResolution: \"auto\", maxWidth: \"200px\" }}\r\n            />\r\n            <Form onSubmit={event => this.uploadFile(event)} id=\"fileupload\">\r\n              <input\r\n                className=\"file-upload btn\"\r\n                id=\"file\"\r\n                type=\"file\"\r\n                accept=\"image/*;capture=camera\"\r\n                name=\"file\"\r\n                required=\"required\"\r\n                onChange={event => this.onFileUpload(event)}\r\n                />\r\n              <label htmlFor=\"file\">\r\n                <span>Select Image</span>\r\n              </label>\r\n\r\n              <br />\r\n              <br />\r\n              <Zoom>\r\n                <Button\r\n                  type=\"submit\"\r\n                  style={{ display: \"flex\", width: \"100%\", margin: \"none\" }}\r\n                  >\r\n                  <CloudUploadIcon />\r\n                  &nbsp;Upload & Test\r\n                </Button>\r\n              </Zoom>\r\n            </Form>\r\n                  </CardContent>\r\n          </Card>\r\n            <br/>\r\n\r\n            </Col>\r\n            <Col sm>\r\n            <RecentImages />\r\n            </Col>\r\n          </Row>\r\n              \r\n\r\n          \r\n          \r\n        </Fade>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewImage;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport { Button, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Fade cascade>\r\n                <Card raised=\"true\">\r\n                    <CardContent>\r\n                        <Row>\r\n                            <Col>\r\n                                <Typography variant=\"h4\">\r\n                                    Paddy Leaf Disease Detection System\r\n                </Typography>\r\n                                <Typography variant=\"h5\">\r\n                                    Identify diseases in paddy leaf\r\n                </Typography>\r\n                                <br />\r\n                                <Link to=\"/newimage\">\r\n                                    <Button variant=\"contained\">\r\n                                        Identify disease from a leaf sample\r\n                  </Button>\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    PLDDS helps farmers identify deadly diseases from their paddy\r\n                                    crops quickly with the help of Artificial Intelligence with Deep Learning.\r\n                </Typography>\r\n                            </Col>\r\n                        </Row>\r\n                        <hr />\r\n                        <Row>\r\n                            <Col>\r\n                                <Typography variant=\"h5\">\r\n                                    Types of diseases that can be identified\r\n              </Typography>\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col style={{ flexGrow: \"inherit\" }}>\r\n                                <h5>Bacterial Leaf Blight Disease</h5>\r\n                                <img\r\n                                    src=\"./images/BLB.jpg\"\r\n                                    alt=\"blb\"\r\n                                    style={{ imageResolution: \"auto\", maxWidth: \"200px\" }}\r\n                                />\r\n                            </Col>\r\n                            <Col sm>\r\n                                <br />\r\n                                <Typography variant=\"subtitle1\" align=\"justify\">\r\n                                    Bacterial Blight disease, a deadly bacterial disease that is\r\n                                    among the most destructive afflictions of cultivated rice. It\r\n                                    causes wilting of seedlings and yellowing and drying of leaves\r\n                                    also called kresek. It becomes evident as water-soaked streaks\r\n                                    that spread from the leaf tips and margins, becoming larger\r\n                                    and eventually releases a milky ooze that dries into yellow\r\n                                    droplets. Characteristic grayish white lesions then appear on\r\n                                    the leaves, signaling the late stages of infection, when\r\n                                    leaves dry out and die. On seedlings, infected leaves turn\r\n                                    grayish green and roll up. As the disease progresses, the\r\n                                    leaves turn yellow to straw-colored and wilt, leading whole\r\n                                    seedlings to dry up and die. Infected seedlings usually are\r\n                                    killed by bacterial blight within two to three weeks of being\r\n                                    infected; adult plants may survive, though rice yield and\r\n                                    quality are diminished.\r\n                </Typography>\r\n                                <br />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col style={{ flexGrow: \"inherit\" }}>\r\n                                <h5>Brown Spot Disease</h5>\r\n                                <img\r\n                                    src=\"./images/brownspot.jpg\"\r\n                                    alt=\"bbrownspot\"\r\n                                    style={{ imageResolution: \"auto\", maxWidth: \"200px\" }}\r\n                                />\r\n                            </Col>\r\n                            <Col sm>\r\n                                <br />\r\n                                <Typography variant=\"subtitle1\" align=\"justify\">\r\n                                    Brown spot is a fungal disease that infects the coleoptile,\r\n                                    leaves, leaf sheath, panicle branches, glumes, and spikelets.\r\n                                    Its most observable damage is the numerous big spots on the\r\n                                    leaves which can kill the whole leaf. When infection occurs in\r\n                                    the seed, unfilled grains or spotted or discolored seeds are\r\n                                    formed. The disease can develop in areas with high relative\r\n                                    humidity and temperature It is common in unflooded and\r\n                                    nutrient-deficient soil, or in soils that accumulate toxic\r\n                                    substances. The fungus can survive in the seed for more than\r\n                                    four years and can spread from plant to plant through air.\r\n                                    Brown spot can occur at all crop stages, but the infection is\r\n                                    most critical during maximum tillering up to the ripening\r\n                                    stages of the crop.\r\n                </Typography>\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col style={{ flexGrow: \"inherit\" }}>\r\n                                <h5>Leaf Blast Disease</h5>\r\n                                <img\r\n                                    src=\"./images/leafblast.jpg\"\r\n                                    alt=\"leafblast\"\r\n                                    style={{ imageResolution: \"auto\", maxWidth: \"200px\" }}\r\n                                />\r\n                            </Col>\r\n                            <Col sm>\r\n                                <br />\r\n                                <Typography variant=\"subtitle1\" align=\"justify\">\r\n                                    Leaf blast disease also known as rice blast disease, on which\r\n                                    it causes diamond / spindle shaped white to gray lesion with\r\n                                    dark green to brown borders surrounded by a yellowish halo,\r\n                                    the lesion may enlarge coalesce and kill entire leaves. It can\r\n                                    affect all above ground parts of a rice plant: leaf, collar,\r\n                                    node, neck, parts of panicle, and sometimes leaf sheath. Blast\r\n                                    can occur wherever blast spores are present. It occurs in\r\n                                    areas with low soil moisture, frequent and prolonged periods\r\n                                    of rain shower, and cool temperature in the daytime. In upland\r\n                                    rice, large day-night temperature differences that cause dew\r\n                                    formation on leaves and overall cooler temperatures favor the\r\n                                    development of the disease. Rice can have blast in all growth\r\n                                    stages. However, leaf blast incidence tends to lessen as\r\n                                    plants mature and develop adult plant resistance to the\r\n                                    disease.\r\n                </Typography>\r\n                            </Col>\r\n                        </Row>\r\n                    </CardContent>\r\n                </Card>\r\n            </Fade>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { ProgressBar, Spinner, Row, Col } from \"react-bootstrap\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport backendapi from \"./backendapi\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  LinearProgress,\r\n  IconButton,\r\n  Icon,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nclass ImageResult extends React.Component {\r\n  state = {\r\n    file: null,\r\n    fileObj: null,\r\n    filename: null,\r\n    fileURL: null,\r\n    cat: null,\r\n    blight_level: null,\r\n    blast_level: null,\r\n    brownspot_level: null,\r\n    selected_model: null,\r\n    modelError:false\r\n  };\r\n  componentWillMount() {\r\n    const { file, filename, selected_model } = this.props.location.state;\r\n    this.setState(() => ({ file, filename, selected_model }));\r\n    backendapi\r\n      .get(\"/getimg/\" + filename)\r\n      .then((res) => {\r\n        this.setState({ fileURL: res.config.baseURL + res.config.url });\r\n        console.log(\"imgPATH=\" + res.config.url);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    if (window.localStorage.getItem(\"model_fname\") != null)\r\n      this.setState({\r\n        selected_model: window.localStorage.getItem(\"model_fname\"),\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    if (this.state.selected_model) {\r\n      backendapi\r\n        .post(\"/testmodel/\" + this.state.filename, {\r\n          model: this.state.selected_model,\r\n        }) //test model\r\n        .then((res) => {\r\n          this.setState({\r\n            cat: res.data.category,\r\n            blight_level: res.data.Percentage.bacterial_blight,\r\n            blast_level: res.data.Percentage.leaf_blast,\r\n            brownspot_level: res.data.Percentage.brownspot,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n          this.setState({modelError:true})\r\n        });\r\n    } else {\r\n      backendapi\r\n        .post(\"/testmodel/\" + this.state.filename) //test model\r\n        .then((res) => {\r\n          this.setState({\r\n            cat: res.data.category,\r\n            blight_level: res.data.Percentage.bacterial_blight,\r\n            blast_level: res.data.Percentage.leaf_blast,\r\n            brownspot_level: res.data.Percentage.brownspot,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n          this.setState({modelError:true})\r\n        });\r\n    }\r\n  }\r\n  checkLevel = (value) => {\r\n    var level;\r\n    if (value >= 75) level = \"success\";\r\n    else if (value >= 50) level = \"info\";\r\n    else if (value >= 15) level = \"warning\";\r\n    else level = \"danger\";\r\n    return level;\r\n  };\r\n  render() {\r\n    const PredictData = () => {\r\n      if (this.state.cat != null)\r\n        return (\r\n          <div>\r\n            <Spring\r\n              from={{\r\n                brownspot_level: 0,\r\n                blast_level: 0,\r\n                blight_level: 0,\r\n              }}\r\n              to={{\r\n                brownspot_level: this.state.brownspot_level,\r\n                blast_level: this.state.blast_level,\r\n                blight_level: this.state.blight_level,\r\n              }}\r\n              config={{ tension: 200, precision: 1 }}\r\n            >\r\n              {(props) => (\r\n                <div>\r\n                  <Fade cascade>\r\n                    <Typography variant=\"h4\">Predicted Disease:</Typography>\r\n                    <Typography variant=\"h3\">{this.state.cat}</Typography>\r\n                    <Typography variant=\"h5\">Accuracy:</Typography>\r\n                    <Typography variant=\"h6\">\r\n                      Brown Spot{`: ${props.brownspot_level.toFixed(3)} %`}\r\n                    </Typography>\r\n                    <ProgressBar\r\n                      variant={this.checkLevel(props.brownspot_level)}\r\n                      now={props.brownspot_level}\r\n                    />\r\n                    <Typography variant=\"h6\">\r\n                      Leaf Blast{`: ${props.blast_level.toFixed(3)} %`}\r\n                    </Typography>\r\n                    <ProgressBar\r\n                      variant={this.checkLevel(props.blast_level)}\r\n                      now={props.blast_level}\r\n                    />\r\n                    <Typography variant=\"h6\">\r\n                      Bacterial Blight{`: ${props.blight_level.toFixed(3)} %`}\r\n                    </Typography>\r\n                    <ProgressBar\r\n                      variant={this.checkLevel(props.blight_level)}\r\n                      now={props.blight_level}\r\n                    />\r\n                  </Fade>\r\n                </div>\r\n              )}\r\n            </Spring>\r\n          </div>\r\n        );\r\n      if (this.state.cat === null && this.state.modelError === true)\r\n        return (\r\n          <div>\r\n            <center>\r\n              ❗ Tensorflow Error.<br />\r\n              This is probably due to concurrent operation. 👩🏻‍💻<br />\r\n              or Network error 🌍\r\n            </center>\r\n          </div>\r\n        )\r\n      else {\r\n        return (\r\n          <div>\r\n            <center>\r\n              <Spinner animation=\"grow\" />\r\n              <br />\r\n              Testing image...\r\n            </center>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    const RemedyView = () => {\r\n      if (this.state.cat === \"Brown Spot\")\r\n        return (\r\n          <div>\r\n            <h5>Remedies - Brown Spot</h5>\r\n            <p>\r\n              Spray any one of the following: <br />\r\n              <ul>\r\n                <li>Metominostrobin @ 500ml/ha </li>\r\n              </ul>\r\n            </p>\r\n          </div>\r\n        );\r\n      if (this.state.cat === \"Bacterial Blight\")\r\n        return (\r\n          <div>\r\n            <h5>Remedies - Bacterial Leaf Blight</h5>\r\n            <p>\r\n              Biological Method\r\n              <br />\r\n              <ul>\r\n                <li>\r\n                  Spray fresh cowdung extract 20% twice (starting from initial\r\n                  appearance of the disease and another at fortnightly interval){\" \"}\r\n                </li>\r\n                <li>\r\n                  Neem oil 60 EC 3% (or) NSKE 5% is recommended for the control\r\n                  of sheath rot, sheath blight, grain discolouration and\r\n                  bacterial blight{\" \"}\r\n                </li>\r\n              </ul>\r\n            </p>\r\n          </div>\r\n        );\r\n      if (this.state.cat === \"Leaf Blast\")\r\n        return (\r\n          <div>\r\n            <h5>Remedies - Leaf Blast</h5>\r\n            <p>\r\n              Cultural Method\r\n              <br />\r\n              <ul>\r\n                <li>Remove collateral weed hosts from bunds and channels </li>\r\n                <li>Use only disease free seedlings </li>\r\n                <li>Avoid excess nitrogen</li>\r\n                <li>\r\n                  Apply N in three split doses (50% basal, 25% in tillering\r\n                  phase and 25% N in panicle initiation stage){\" \"}\r\n                </li>\r\n                <li>Use resistant variety CO 47. </li>\r\n              </ul>\r\n              Chemical Method\r\n              <br />\r\n              <ul>\r\n                <li>\r\n                  Spray after observing initial infection of the disease,{\" \"}\r\n                </li>\r\n                <li>Carbendazim 50WP @ 500g/ha (or) </li>\r\n                <li>Tricyclozole 75 WP @ 500g/ha (or) </li>\r\n                <li>Metominostrobin 20 SC @ 500ml/ha (or) 47 </li>\r\n                <li>Azoxystrobin 25 SC @ 500 ml/ha </li>\r\n              </ul>\r\n              Biological Method\r\n              <br />\r\n              <ul>\r\n                <li>\r\n                  Seed Treatment with TNAU Pf 1liquid formulation @ 10 ml/kg of\r\n                  seeds{\" \"}\r\n                </li>\r\n                <li>\r\n                  Seedling root dipping with TNAU Pf 1liquid formulation (500 ml\r\n                  for one hectare seedlings){\" \"}\r\n                </li>\r\n                <li>\r\n                  Soil application with TNAU Pf 1liquid formulation (500ml/ha){\" \"}\r\n                </li>\r\n                <li>Foliar spray with TNAU Pf 1liquid formulation @ 5ml/lit</li>\r\n              </ul>\r\n            </p>\r\n          </div>\r\n        );\r\n      if (this.state.cat === null && this.state.modelError === true)\r\n        return (\r\n          <div>\r\n            <center>Try again 🤷‍♂️</center>\r\n          </div>\r\n        )\r\n      else\r\n        return (\r\n          <div>\r\n            <LinearProgress color=\"secondary\" />\r\n          </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Fade>\r\n          <Card raised={true}>\r\n            <CardContent>\r\n              <Link to=\"/newimage\">\r\n                <Tooltip title=\"Go back\">\r\n              <IconButton>\r\n                <ArrowBackIcon />\r\n                </IconButton>\r\n                </Tooltip>\r\n                </Link>\r\n              <Typography variant=\"h4\">\r\n              Result\r\n              </Typography>\r\n              <p>\r\n                <i>Backend & Model is still under development.</i>\r\n              </p>\r\n              <Row>\r\n                <Col>\r\n                  <img\r\n                    src={this.state.fileURL}\r\n                    style={{ imageResolution: \"auto\", maxWidth: \"200px\" }}\r\n                    alt={this.state.filename}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                </Col>\r\n                <Col sm>\r\n                  <PredictData />\r\n                </Col>\r\n              </Row>\r\n              <hr />\r\n              <RemedyView />\r\n            </CardContent>\r\n          </Card>\r\n        </Fade>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageResult;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport backendapi from \"./backendapi\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nclass ViewImage extends React.Component {\r\n  state = {\r\n    imgurl: null,\r\n    imgfname: null,\r\n    showConfirm: false,\r\n    succ: false,\r\n    deleteSuccess: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { imgurl, imgfname } = this.props.location.state;\r\n    this.setState(() => ({ imgurl, imgfname }));\r\n  }\r\n\r\n  confirmDelete() {\r\n    console.log(\"delete action!\");\r\n    backendapi\r\n      .delete(\"/deletefile/\" + this.state.imgfname)\r\n      .then((res) => {\r\n        console.log(res.data.message);\r\n        this.setState({ showConfirm: false, succ: true });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.succ === true)\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/newimage\",\r\n          }}\r\n        />\r\n      );\r\n\r\n    const Deletedialog = () => {\r\n      return (\r\n        <Dialog\r\n          open={this.state.showConfirm}\r\n          onClose={() => this.setState({ showConfirm: false })}\r\n        >\r\n          <DialogTitle>Confirm Delete</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Do you want to delete this image? <br />\r\n              This image cannot be restored if you perform this action.\r\n            </DialogContentText>\r\n            <DialogActions>\r\n              <Button onClick={() => this.setState({ showConfirm: false })}>\r\n                No\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                onClick={() => this.confirmDelete()}\r\n                autoFocus\r\n              >\r\n                Yes\r\n              </Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        </Dialog>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Fade>\r\n          <Card>\r\n            <CardContent>\r\n              <h3>View Image</h3>\r\n              <Zoom duration={500}>\r\n                <img\r\n                  alt=\"img\"\r\n                  src={this.state.imgurl}\r\n                  style={{ maxWidth: \"300px\" }}\r\n                />\r\n                <h5>Filename: {this.state.imgfname}</h5>\r\n              </Zoom>\r\n              <Zoom cascade duration={500} delay={100}>\r\n                <Row style={{ margin: \"auto\" }}>\r\n                  <Col>\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/result\",\r\n                        state: { filename: this.state.imgfname },\r\n                      }}\r\n                    >\r\n                      <Button style={{ float: \"left\" }}>Test image</Button>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col>\r\n                    <Button\r\n                      style={{ float: \"right\" }}\r\n                      onClick={() => this.setState({ showConfirm: true })}\r\n                    >\r\n                      Delete file\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Zoom>\r\n            </CardContent>\r\n          </Card>\r\n        </Fade>\r\n        <Deletedialog />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ViewImage;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  FormHelperText,\r\n  MenuItem,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Switch,\r\n  FormControlLabel,\r\n  LinearProgress,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport backendapi from \"./backendapi\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nclass DevTools extends React.Component {\r\n  state = {\r\n    model_list: [],\r\n    selected_model: null,\r\n    selected_model_name: null,\r\n    selected_model_fullname: null,\r\n    selected_model_obj: {},\r\n    selected_modelprops: {},\r\n    selected_model_rank: null,\r\n    darkMode: false,\r\n    pageloadErr: false,\r\n    pageloaded:false\r\n  };\r\n\r\n  componentWillMount() {\r\n    if (window.localStorage.getItem(\"model_name\") != null)\r\n      var modelname = window.localStorage.getItem(\"model_name\");\r\n    var modelfname = window.localStorage.getItem(\"model_fname\");\r\n    var modelfullname = window.localStorage.getItem(\"model_fullname\");\r\n    this.setState({\r\n      selected_model: modelfname,\r\n      selected_model_name: modelname,\r\n      selected_model_fullname: modelfullname,\r\n    });\r\n    backendapi\r\n      .get(\"/listmodels\")\r\n      .then((res) => {\r\n        this.setState({\r\n          model_list: res.data.models,\r\n        });\r\n        if (this.state.selected_model === null) {\r\n          window.localStorage.setItem(\r\n            \"model_name\",\r\n            res.data.models[0].model_name\r\n          );\r\n          window.localStorage.setItem(\r\n            \"model_fname\",\r\n            res.data.models[0].model_filename\r\n          );\r\n          window.localStorage.setItem(\r\n            \"model_fullname\",\r\n            res.data.models[0].model_fullname\r\n          );\r\n          this.setState({\r\n            selected_model: window.localStorage.getItem(\"model_fname\"),\r\n            selected_model_name: window.localStorage.getItem(\"model_name\"),\r\n            selected_model_fullname: window.localStorage.getItem(\r\n              \"model_fullname\"\r\n            ),\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    if (window.localStorage.getItem(\"theme\") === \"dark\")\r\n      this.setState({ darkMode: true });\r\n    if (window.localStorage.getItem(\"theme\") === \"light\")\r\n      this.setState({ darkMode: false });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    window.localStorage.setItem(\"model_name\", this.state.selected_model_name);\r\n    window.localStorage.setItem(\"model_fname\", this.state.selected_model);\r\n    window.localStorage.setItem(\r\n      \"model_fullname\",\r\n      this.state.selected_model_fullname\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => this.onModelChange(this.state.selected_model_name), 300);\r\n    backendapi.get('/')\r\n      .then(res => this.setState({ pageloaded: true }))\r\n    .catch(err=>this.setState({pageloadErr:true}))\r\n  }\r\n\r\n  onModelChange(modelname) {\r\n    backendapi\r\n      .get(\"/model_details/\" + modelname)\r\n      .then((res) => {\r\n        this.setState({\r\n          selected_model_fullname: res.data.model_fullname,\r\n          selected_model: res.data.model_filename,\r\n          selected_modelprops: res.data.model_props,\r\n          selected_model_rank: res.data.rank,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  render() {\r\n    const PageLoader = () => {\r\n      if (this.state.pageloaded === false && this.state.pageloadErr === false)\r\n        return (\r\n          <div>\r\n            <br />\r\n            <center><CircularProgress color=\"secondary\"/></center>\r\n        </div>\r\n        )\r\n      if (this.state.pageloaded === false && this.state.pageloadErr === true)\r\n        return (\r\n          <div>\r\n            <br />\r\n            <Alert severity=\"error\">Unable to connect to Server. Check your internet connection and try again.</Alert>\r\n          </div>\r\n        )\r\n      else return (\r\n        <div>\r\n<Typography variant=\"h5\">Current Classification Model</Typography>\r\n              <Row>\r\n                <Col>\r\n                  <Typography\r\n                    variant=\"h2\"\r\n                    onClick={() =>\r\n                      this.onModelChange(this.state.selected_model_name)\r\n                    }\r\n                  >\r\n                    <Spring\r\n                      from={{ conv: 0, nodes: 0, dense: 0 }}\r\n                      to={{\r\n                        conv: this.state.selected_modelprops.conv,\r\n                        nodes: this.state.selected_modelprops.nodes,\r\n                        dense: this.state.selected_modelprops.dense,\r\n                      }}\r\n                    >\r\n                      {(props) => (\r\n                        <div>\r\n                          {props.conv.toFixed(0)}C{props.nodes.toFixed(0)}N\r\n                          {props.dense.toFixed(0)}D\r\n                        </div>\r\n                      )}\r\n                    </Spring>\r\n                  </Typography>\r\n\r\n                  <Spring\r\n                    from={{ conv: 0 }}\r\n                    to={{\r\n                      conv: this.state.selected_modelprops.conv,\r\n                      nodes: this.state.selected_modelprops.nodes,\r\n                      dense: this.state.selected_modelprops.dense,\r\n                    }}\r\n                  >\r\n                    {(props) => (\r\n                      <div>\r\n                        <Typography variant=\"h5\">\r\n                          {props.conv.toFixed(0)} Convolution layers\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                          {props.nodes.toFixed(0)} Nodes per layer\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                          {props.dense.toFixed(0)} Dense layer(s)\r\n                        </Typography>\r\n                      </div>\r\n                    )}\r\n                  </Spring>\r\n\r\n                  <Typography variant=\"h6\">\r\n                    <ModelQuality rank={this.state.selected_model_rank} />\r\n                  </Typography>\r\n                  <br />\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/modelprofile\",\r\n                      state: {\r\n                        model_name: this.state.selected_model_name,\r\n                        model_fullname: this.state.selected_model_fullname,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Button variant=\"contained\">View Model Profile</Button>\r\n                  </Link>\r\n                  <br />\r\n                  <br />\r\n                  <Typography variant=\"h5\">\r\n                    Change Classification Model\r\n                  </Typography>\r\n                  <div>\r\n                    <SelectModelList />\r\n                  </div>\r\n                </Col>\r\n                {/* QUICK UPDATE */}\r\n                {/* <Col sm>\r\n                  <Typography variant=\"h5\">Available Models</Typography>\r\n                  <br />\r\n                  {ProfileModelList}\r\n                </Col> */}\r\n              </Row>\r\n        </div>\r\n      )\r\n  }\r\n    const ProfileModelList = this.state.model_list.map((model) => {\r\n      return (\r\n        <div>\r\n          <List dense={true}>\r\n            <Link\r\n              style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n              to={{\r\n                pathname: \"/modelprofile\",\r\n                state: {\r\n                  model_name: model.model_name,\r\n                  model_fullname: model.model_fullname,\r\n                },\r\n              }}\r\n            >\r\n              <ListItem\r\n                button\r\n                selected={this.state.selected_model_name === model.model_name}\r\n              >\r\n                <ListItemText>\r\n                  {model.model_name} [{model.model_fullname}]\r\n                </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const models = this.state.model_list.map((mdl) => {\r\n      return (\r\n        <MenuItem\r\n          key={mdl.rank}\r\n          name={mdl.model_filename}\r\n          value={mdl.model_name}\r\n        >\r\n          <Typography variant=\"subtitle1\">{mdl.model_name}</Typography>\r\n        </MenuItem>\r\n      );\r\n    });\r\n    const ModelQuality = (props) => {\r\n      if (props.rank === 1) return \"Best Model 💯\";\r\n      else if (props.rank > 1 && props.rank < 8) return \"Good Model 👍🏻\";\r\n      else return \"Poor Model 😕\";\r\n    };\r\n\r\n    const SelectModelList = () => {\r\n      if (this.state.model_list != null)\r\n        return (\r\n          <div>\r\n            <FormControl>\r\n              <Select\r\n                value={this.state.selected_model_name}\r\n                // native={true}\r\n                onChange={(event) => {\r\n                  this.onModelChange(event.target.value);\r\n                  this.setState({\r\n                    selected_model_name: event.target.value,\r\n                  });\r\n                }}\r\n              >\r\n                {models}\r\n              </Select>\r\n              <FormHelperText>Select Model</FormHelperText>\r\n            </FormControl>\r\n          </div>\r\n        );\r\n    };\r\n    return (\r\n      <div>\r\n        <Fade>\r\n          <Card raised={true} style={{maxWidth:\"500px\",margin:\"auto\"}}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Developer Tools</Typography>\r\n              <PageLoader/>\r\n              <br />\r\n              <Row>\r\n                <Col>\r\n                  <FormControlLabel\r\n                    label=\"Dark mode\"\r\n                    labelPlacement=\"start\"\r\n                    control={\r\n                      <Switch\r\n                        checked={this.state.darkMode}\r\n                        onChange={() => {\r\n                          if (this.state.darkMode === true)\r\n                            window.localStorage.setItem(\"theme\", \"light\");\r\n                          if (this.state.darkMode === false)\r\n                            window.localStorage.setItem(\"theme\", \"dark\");\r\n                          window.location.reload();\r\n                        }}\r\n                        color=\"secondary\"\r\n                      />\r\n                    }\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </CardContent>\r\n          </Card>\r\n        </Fade>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DevTools;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport backendapi from \"./backendapi\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport InlineSVG from \"svg-inline-react\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\n\r\nclass ModelProfile extends React.Component {\r\n  state = {\r\n    model_name: null,\r\n    model_fullname: null,\r\n    model_obj: {\r\n      model_props: {},\r\n      model_profile: {\r\n        model_table: [],\r\n      },\r\n    },\r\n    epochAccsvg: null,\r\n    epochLosssvg: null,\r\n  };\r\n  componentWillMount() {\r\n    const { model_name, model_fullname } = this.props.location.state;\r\n    this.setState(() => ({ model_name, model_fullname }));\r\n    // this.setState({model_name:window.localStorage.getItem('model_name')})\r\n    // this.setState({ model_fullname: window.localStorage.getItem('model_fullname') })\r\n  }\r\n\r\n  componentDidMount() {\r\n    backendapi\r\n      .get(\"/model_details/\" + this.state.model_name)\r\n      .then((res) => {\r\n        this.setState({ model_obj: res.data });\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    backendapi\r\n      .get(\"/getepochacc/\" + this.state.model_fullname)\r\n      .then((res) => this.setState({ epochAccsvg: res.data }))\r\n      .catch((err) => console.log(err));\r\n\r\n    backendapi\r\n      .get(\"/getepochloss/\" + this.state.model_fullname)\r\n      .then((res) => this.setState({ epochLosssvg: res.data }))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const model_summary = this.state.model_obj.model_profile.model_table.map(\r\n      (layer) => {\r\n        return (\r\n          <TableRow>\r\n            <TableCell>\r\n              {layer.layer_type}\r\n              <br />\r\n              <Chip size=\"small\" label={layer.layer_cat} />\r\n            </TableCell>\r\n            {/* <TableCell>{layer.layer_cat}</TableCell> */}\r\n            <TableCell>({layer.output_shape})</TableCell>\r\n            <TableCell>{layer.param_num}</TableCell>\r\n          </TableRow>\r\n        );\r\n      }\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Fade>\r\n          <Card raised={true}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\">Model Profile</Typography>\r\n              <Row noGutters={true}>\r\n                <Spring\r\n                  from={{\r\n                    conv: 0,\r\n                    nodes: 0,\r\n                    dense: 0,\r\n                    acc: 0,\r\n                    loss: 0,\r\n                  }}\r\n                  to={{\r\n                    conv: this.state.model_obj.model_props.conv,\r\n                    nodes: this.state.model_obj.model_props.nodes,\r\n                    dense: this.state.model_obj.model_props.dense,\r\n                    acc: this.state.model_obj.highest_validation_acc,\r\n                    loss: this.state.model_obj.lowest_validation_loss,\r\n                  }}\r\n                >\r\n                  {(props) => (\r\n                    <>\r\n                      <Col>\r\n                        <Typography variant=\"h2\">\r\n                          {props.conv.toFixed(0)}C{props.nodes.toFixed(0)}N\r\n                          {props.dense.toFixed(0)}D<br />\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                          {props.conv.toFixed(0)} Convolution layers\r\n                          <br />\r\n                          {props.nodes.toFixed(0)} Nodes per layer\r\n                          <br />\r\n                          {props.dense.toFixed(0)} Dense layer(s)\r\n                          <br />\r\n                        </Typography>\r\n                      </Col>\r\n                      <Col sm style={{ margin: \"auto\" }}>\r\n                        Highest validation accuracy: {props.acc.toFixed(5)}\r\n                        <br />\r\n                        <div style={{ maxWidth: \"400px\" }}>\r\n                          <InlineSVG src={this.state.epochAccsvg}></InlineSVG>\r\n                        </div>\r\n                        <br />\r\n                        Lowest validation loss: {props.loss.toFixed(6)}\r\n                        <br />\r\n                        <div style={{ maxWidth: \"400px\" }}>\r\n                          <InlineSVG src={this.state.epochLosssvg}></InlineSVG>\r\n                        </div>\r\n                        <br />\r\n                      </Col>\r\n                    </>\r\n                  )}\r\n                </Spring>\r\n              </Row>\r\n              <Typography variant=\"h6\">Model Summary</Typography>\r\n              <br />\r\n              <Row>\r\n                <Col sm>\r\n                  <Typography variant=\"body1\">\r\n                    Model name:{\" \"}\r\n                    {this.state.model_obj.model_profile.model_desc_name}\r\n                    <br />\r\n                  </Typography>\r\n                  <br />\r\n                  <TableContainer\r\n                    component={Paper}\r\n                    size=\"small\"\r\n                    style={{ maxHeight: \"70vh\", overflow: \"auto\" }}\r\n                  >\r\n                    <Table stickyHeader>\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>\r\n                            Layer <Chip size=\"small\" label=\"Type\" />\r\n                          </TableCell>\r\n                          {/* <TableCell>Layer type</TableCell> */}\r\n                          <TableCell>Output shape</TableCell>\r\n                          <TableCell>Param#</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>{model_summary}</TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <br />\r\n                </Col>\r\n                <Col>\r\n                  <Typography variant=\"body1\">\r\n                    Total Parameters:{\" \"}\r\n                    {this.state.model_obj.model_profile.total_params}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">\r\n                    Trainable Parameters:{\" \"}\r\n                    {this.state.model_obj.model_profile.trainable_params}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">\r\n                    Non-trainable Parameters:{\" \"}\r\n                    {this.state.model_obj.model_profile.non_trainable_params}\r\n                  </Typography>\r\n                </Col>\r\n              </Row>\r\n            </CardContent>\r\n          </Card>\r\n        </Fade>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModelProfile;\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <center>\r\n                <br/>\r\n            &copy; PLDDS 2020\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  IconButton,\r\n  Tooltip,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <Fade cascade>\r\n      <Card raised={true} style={{maxWidth:\"500px\",margin:\"auto\"}}>\r\n        <CardContent>\r\n          <Row>\r\n              <Col>\r\n                <Row style={{alignItems:\"center\"}}>\r\n                  <Col>\r\n              <Typography variant=\"h2\">Team</Typography>\r\n                  </Col>\r\n                  <Col>\r\n                    <Button size=\"large\" style={{float:\"right\"}} onClick={()=>window.open(\"https://github.com/joelfinz/pldds\")}>\r\n                    <i className=\"fab fa-github\"/>&nbsp;Source\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              <br />\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      style={{ width: \"100px\", height: \"100px\", marginRight:\"12px\" }}\r\n                      src=\"./images/devs/mahesh.jpg\" />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"h5\">Mahesh Chandran G.</Typography>\r\n                    }\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography variant=\"subtitle2\">\r\n                          Deep Learning Practitioner\r\n                        </Typography>\r\n                        <Tooltip title=\"Github: @mahesh147\">\r\n                        <IconButton onClick={()=>window.open(\"https://github.com/mahesh147\")}>\r\n                        <i className=\"fab fa-github\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Linkedin: /in/mahesh-chandran-010865157\">\r\n                        <IconButton onClick={()=>window.open(\"https://www.linkedin.com/in/mahesh-chandran-010865157/  \")}>\r\n                        <i className=\"fab fa-linkedin-in\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Telegram: @mahesh98\">\r\n                        <IconButton onClick={()=>window.open(\"https://t.me/mahesh98\")}>\r\n                        <i className=\"fab fa-telegram\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Email: maheshchandran147@gmail.com\">\r\n                        <IconButton onClick={()=>window.open(\"mailto:maheshchandran147@gmail.com\")}>\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                      </React.Fragment>\r\n                    }\r\n                  ></ListItemText>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                    style={{ width: \"100px\", height: \"100px\", marginRight:\"12px\" }}\r\n                    src=\"./images/devs/aldrin.jpg\" />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"h5\">Aldrin Geo Alfred</Typography>\r\n                    }\r\n                    secondary={\r\n                      <React.Fragment>\r\n                      <Typography variant=\"subtitle2\">\r\n                          Deep Learning Practitioner\r\n                      </Typography>\r\n                        <Tooltip title=\"Github: @aldrinalfred\">\r\n                      <IconButton  onClick={()=>window.open(\"https://github.com/aldrinalfred\")}>\r\n                        <i className=\"fab fa-github\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Linkedin: /in/aldrin-alfred-5b840a162\">\r\n                        <IconButton onClick={()=>window.open(\"https://www.linkedin.com/in/aldrin-alfred-5b840a162/\")}>\r\n                        <i className=\"fab fa-linkedin-in\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Telegram: @aldrin_alfred\">\r\n                        <IconButton onClick={()=>window.open(\"https://t.me/aldrin_alfred\")}>\r\n                        <i className=\"fab fa-telegram\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Email: aldrinalfred72@gmail.com\">\r\n                        <IconButton onClick={()=>window.open(\"mailto:aldrinalfred72@gmail.com\")}>\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                      </React.Fragment>\r\n                    }\r\n                  ></ListItemText>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                    style={{ width: \"100px\", height: \"100px\", marginRight:\"12px\" }}\r\n                    src=\"./images/devs/joel.png\" />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={<Typography variant=\"h5\">Joel Fintan</Typography>}\r\n                    secondary={\r\n                      <React.Fragment>\r\n                      <Typography variant=\"subtitle2\">\r\n                          Full Stack Developer\r\n                      </Typography>\r\n                        <Tooltip title=\"Github: @joelfinz\">\r\n                      <IconButton onClick={()=>window.open(\"https://github.com/joelfinz\")}>\r\n                        <i className=\"fab fa-github\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Linkedin: /in/joelfintan\">\r\n                        <IconButton onClick={()=>window.open(\"https://www.linkedin.com/in/joelfintan/\")}>\r\n                        <i className=\"fab fa-linkedin-in\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Telegram: @finspeed\">\r\n                        <IconButton onClick={()=>window.open(\"https://t.me/finspeed\")}>\r\n                        <i className=\"fab fa-telegram\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Email: joelfintan@gmail.com\">\r\n                        <IconButton onClick={()=>window.open(\"mailto:joelfintan@gmail.com\")}>\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                      </React.Fragment>\r\n                    }\r\n                  ></ListItemText>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                    style={{ width: \"100px\", height: \"100px\", marginRight:\"12px\" }}\r\n                    src=\"./images/devs/anay.jpg\" />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"h5\">Anay G. Varghese</Typography>\r\n                    }\r\n                    secondary={\r\n                      <React.Fragment>\r\n                        <Typography variant=\"subtitle2\">Domain Expert</Typography>\r\n                        <Tooltip title=\"Linkedin: /in/anay-varghese-451852153\">\r\n                        <IconButton onClick={()=>window.open(\"https://www.linkedin.com/in/anay-varghese-451852153/\")}>\r\n                        <i className=\"fab fa-linkedin-in\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Email: flyhigh.av14@gmail.com\">\r\n                        <IconButton onClick={()=>window.open(\"mailto:flyhigh.av14@gmail.com\")}>\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                      </React.Fragment>\r\n                    }\r\n                  ></ListItemText>\r\n                </ListItem>\r\n            <br/>\r\n              </List>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              {/* TODO */}\r\n            </Col>\r\n          </Row>\r\n        </CardContent>\r\n        </Card>\r\n        </Fade>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","import React from 'react';\r\nimport { Card, CardContent, Link } from '@material-ui/core';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <div>\r\n            <Card raised={true}>\r\n                <CardContent>\r\n                    <Row>\r\n                        <center>\r\n                            Error 404: Not Found 🙄<br />\r\n                            Go back to <Link to=\"/\">home</Link>\r\n                        </center>\r\n                    </Row>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"typeface-roboto\";\r\nimport Container from '@material-ui/core/Container';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./css/style.css\";\r\nimport NavBar from \"./NavBar\";\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\nimport NewImage from \"./NewImage\";\r\nimport Home from \"./Home\";\r\nimport ImageResult from \"./ImageResult\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport ViewImage from \"./ViewImage\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport DevTools from \"./DevTools\";\r\nimport ModelProfile from \"./ModelProfile\";\r\nimport { createMuiTheme, ThemeProvider, CssBaseline, Divider } from \"@material-ui/core\";\r\nimport Footer from \"./Footer\";\r\nimport About from \"./About\";\r\nimport Error404 from \"./Error404\";\r\n\r\nconst darkmode = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    background: {\r\n      default:\"#1a1a1a\",\r\n      paper:\"#0d0d0d\"\r\n    }\r\n  }\r\n});\r\n\r\nconst lightmode = createMuiTheme({\r\n  palette: {\r\n    type:\"light\"\r\n  }\r\n})\r\n\r\nvar theme = window.localStorage.getItem('theme')\r\nvar setTheme = lightmode\r\nif (theme === null)\r\n  window.localStorage.setItem('theme', 'light')\r\nif (theme === 'dark')\r\n  setTheme = darkmode\r\nif (theme === 'light')\r\n  setTheme = lightmode\r\n  \r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter basename=\"/pldds\">\r\n              <ThemeProvider theme={setTheme} >\r\n            <CssBaseline>\r\n        <NavBar style={{ marginTop: \"1px\" }} />\r\n          <Container style={{ marginTop: \"80px\" }}>\r\n              <TransitionGroup>\r\n            <Route path=\"*\" conmponent={Error404}></Route>\r\n            <Route exact path=\"/about\" component={About}></Route>\r\n            <Route exact path=\"/modelprofile\" component={ModelProfile}></Route>\r\n            <Route exact path=\"/devtools\" component={DevTools}></Route>\r\n            <Route exact path=\"/newimage\" component={NewImage}></Route>\r\n            <Route exact path=\"/viewImage\" component={ViewImage}></Route>\r\n            <Route exact path=\"/result\" component={ImageResult}></Route>\r\n              <Route exact path=\"/\" component={Home}></Route>\r\n              </TransitionGroup>\r\n              <br/>\r\n                <Divider/>\r\n            </Container>\r\n            <Footer/>\r\n          </CssBaseline>\r\n              </ThemeProvider>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}